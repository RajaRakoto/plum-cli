/*! @license
 *  Project: Buttons
 *  Description: A highly customizable CSS button library built with Sass and Compass
 *  Author: Alex Wolfe and Rob Levin
 *  License: Apache License v2.0
 */
!(function (t, n, e, i) {
  'use strict';
  var o = 'menuButton',
    u = { propertyName: 'value' };
  function s(n, e) {
    (this.options = t.extend({}, u, e)),
      (this._defaults = u),
      (this._name = o),
      (this.$element = t(n)),
      this.init();
  }
  (s.prototype = {
    constructor: s,
    init: function () {
      this.toggle();
    },
    toggle: function (t, n) {
      'show' === this.$element.data('dropdown')
        ? this.hideMenu()
        : this.showMenu();
    },
    showMenu: function () {
      this.$element.data('dropdown', 'show'),
        this.$element.find('ul').show(),
        this.$element.find('.button:first').addClass('is-active');
    },
    hideMenu: function () {
      this.$element.data('dropdown', 'hide'),
        this.$element.find('ul').hide(),
        this.$element.find('.button:first').removeClass('is-active');
    },
  }),
    (t.fn.menuButton = function (n) {
      return this.each(function () {
        t.data(this, 'plugin_menuButton')
          ? t.data(this, 'plugin_menuButton').toggle()
          : t.data(this, 'plugin_menuButton', new s(this, n));
      });
    }),
    t(e).on('click', function (n) {
      t.each(t('[data-buttons=dropdown]'), function (e, i) {
        t(n.target.offsetParent)[0] != t(this)[0] &&
          t.data(this, 'plugin_menuButton') &&
          (t.data(this, 'plugin_menuButton').hideMenu(),
          t(this).find('ul').hide());
      });
    }),
    t(e).on('click', '[data-buttons=dropdown]', function (n) {
      t(n.currentTarget).menuButton();
    }),
    t(e).on('click', '[data-buttons=dropdown] > a', function (t) {
      t.preventDefault();
    });
})(jQuery, window, document);
